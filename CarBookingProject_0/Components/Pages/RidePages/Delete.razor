@page "/rides/delete"
@using Microsoft.EntityFrameworkCore
@using CarBookingProject_0.Domain
@inject IDbContextFactory<CarBookingProject_0.Data.CarBookingProject_0Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Ride</h2>
    <hr />
    @if (ride is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">PickupTime</dt>
            <dd class="col-sm-10">@ride.PickupTime</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DropoffTime</dt>
            <dd class="col-sm-10">@ride.DropoffTime</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">RideStatus</dt>
            <dd class="col-sm-10">@ride.RideStatus</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">RideCost</dt>
            <dd class="col-sm-10">@ride.RideCost</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UserId</dt>
            <dd class="col-sm-10">@ride.UserId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LocationId</dt>
            <dd class="col-sm-10">@ride.LocationId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">PromotionId</dt>
            <dd class="col-sm-10">@ride.PromotionId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@ride.DateCreated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@ride.DateUpdated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@ride.CreatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@ride.UpdatedBy</dd>
        </dl>
        <EditForm method="post" Model="ride" OnValidSubmit="DeleteRide" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(ride is null)">Delete</button> |
            <a href="/rides">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Ride? ride;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        ride = await context.Ride.FirstOrDefaultAsync(m => m.Id == Id);

        if (ride is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteRide()
    {
        using var context = DbFactory.CreateDbContext();
        context.Ride.Remove(ride!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/rides");
    }
}
