@page "/payments/details"
@using Microsoft.EntityFrameworkCore
@using CarBookingProject_0.Domain
@inject IDbContextFactory<CarBookingProject_0.Data.CarBookingProject_0Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Payment</h2>
    <hr />
    @if (payment is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">PaymentType</dt>
            <dd class="col-sm-10">@payment.PaymentType</dd>
            <dt class="col-sm-2">AmountPaid</dt>
            <dd class="col-sm-10">@payment.AmountPaid</dd>
            <dt class="col-sm-2">PaymentStatus</dt>
            <dd class="col-sm-10">@payment.PaymentStatus</dd>
            <dt class="col-sm-2">TransactionDateTime</dt>
            <dd class="col-sm-10">@payment.TransactionDateTime</dd>
            <dt class="col-sm-2">RideId</dt>
            <dd class="col-sm-10">@payment.RideId</dd>
            <dt class="col-sm-2">UserId</dt>
            <dd class="col-sm-10">@payment.UserId</dd>
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@payment.DateCreated</dd>
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@payment.DateUpdated</dd>
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@payment.CreatedBy</dd>
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@payment.UpdatedBy</dd>
        </dl>
        <div>
            <a href="@($"/payments/edit?id={payment.Id}")">Edit</a> |
            <a href="@($"/payments")">Back to List</a>
        </div>
    }
</div>

@code {
    private Payment? payment;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        payment = await context.Payment.FirstOrDefaultAsync(m => m.Id == Id);

        if (payment is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
